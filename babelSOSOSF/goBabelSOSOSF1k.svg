<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.26.3 (20100126.1600)
 -->
<!-- Title: goBabelSOSOSF; 2500 samples Pages: 1 -->
<svg width="100%" height="100%"
  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
// SVGPan
// http://www.cyberz.org/blog/2009/12/08/svgpan-a-javascript-svg-panzoomdrag-library/
// Local modification: if(true || ...) below to force panning, never moving.
// Local modification: add clamping to fix bug in handleMouseWheel.

/**
 *  SVGPan library 1.2
 * ====================
 *
 * Given an unique existing element with id "viewport", including the
 * the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dargging
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

var root = document.documentElement;

var state = 'none', stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "add(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		"onmouseup" : "handleMouseUp(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others

	var g = svgDoc.getElementById("svg");
	g.width = "100%";
	g.height = "100%";
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse move event.
 */
function handleMouseWheel(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	// Clamp to reasonable values.
	// The 0.1 check is important because
	// a very large scroll can turn into a
	// negative z, which rotates the image 180 degrees.
	if(z < 0.1)
		z = 0.1;
	if(z > 10.0)
		z = 10.0;

	var g = svgDoc.getElementById("viewport");

	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = svgDoc.getElementById("viewport");

	if(state == 'pan') {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'move') {
		// Move mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = svgDoc.getElementById("viewport");

	if(true || evt.target.tagName == "svg") {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Move mode
		state = 'move';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'move') {
		// Quit pan mode
		state = '';
	}
}

]]></script>
<g id="viewport" transform="translate(0,0)">
<g id="viewport" class="graph" transform="scale(1 1) rotate(0) translate(4 716)">
<title>goBabelSOSOSF; 2500 samples</title>
<polygon fill="white" stroke="white" points="-4,5 -4,-716 1148,-716 1148,5 -4,5"/>
<!-- Legend -->
<g id="node1" class="node"><title>Legend</title>
<text text-anchor="start" x="8" y="-685.9" font-family="Times Roman,serif" font-size="24.00">goBabelSOSOSF</text>
<text text-anchor="start" x="8" y="-656.9" font-family="Times Roman,serif" font-size="24.00">Total samples: 2500</text>
<text text-anchor="start" x="8" y="-627.9" font-family="Times Roman,serif" font-size="24.00">Focusing on: 2500</text>
<text text-anchor="start" x="8" y="-598.9" font-family="Times Roman,serif" font-size="24.00">Dropped nodes with &lt;= 12 abs(samples)</text>
<text text-anchor="start" x="8" y="-569.9" font-family="Times Roman,serif" font-size="24.00">Dropped edges with &lt;= 2 samples</text>
</g>
<!-- N1 -->
<g id="node2" class="node"><title>N1</title>
<polygon fill="none" stroke="black" points="619,-412 535,-412 535,-374 619,-374 619,-412"/>
<text text-anchor="middle" x="577" y="-400.8" font-family="Times Roman,serif" font-size="8.00">main.main</text>
<text text-anchor="end" x="611" y="-390.8" font-family="Times Roman,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="611" y="-380.8" font-family="Times Roman,serif" font-size="8.00">of 2491 (99.6%)</text>
</g>
<!-- N4 -->
<g id="node5" class="node"><title>N4</title>
<polygon fill="none" stroke="black" points="897,-320 257,-320 257,-156 897,-156 897,-320"/>
<text text-anchor="middle" x="577" y="-276.4" font-family="Times Roman,serif" font-size="44.00">main.(*Cluster).Acceleration</text>
<text text-anchor="end" x="889" y="-224.4" font-family="Times Roman,serif" font-size="44.00">1296 (51.8%)</text>
<text text-anchor="end" x="889" y="-172.4" font-family="Times Roman,serif" font-size="44.00">of 2387 (95.5%)</text>
</g>
<!-- N1&#45;&gt;N4 -->
<g id="edge8" class="edge"><title>N1&#45;&gt;N4</title>
<path fill="none" stroke="black" stroke-width="2" d="M577,-373.994C577,-362.546 577,-347.028 577,-330.567"/>
<polygon fill="black" stroke="black" points="580.5,-330.223 577,-320.223 573.5,-330.223 580.5,-330.223"/>
<text text-anchor="middle" x="595.5" y="-343.4" font-family="Times Roman,serif" font-size="14.00">2387</text>
</g>
<!-- N7 -->
<g id="node8" class="node"><title>N7</title>
<polygon fill="none" stroke="black" points="1143,-273.5 915,-273.5 915,-202.5 1143,-202.5 1143,-273.5"/>
<text text-anchor="middle" x="1029" y="-254.29" font-family="Times Roman,serif" font-size="16.90">main.(*Cluster).Energies</text>
<text text-anchor="end" x="1135" y="-233.29" font-family="Times Roman,serif" font-size="16.90">80 (3.2%)</text>
<text text-anchor="end" x="1135" y="-212.29" font-family="Times Roman,serif" font-size="16.90">of 97 (3.9%)</text>
</g>
<!-- N1&#45;&gt;N7 -->
<g id="edge10" class="edge"><title>N1&#45;&gt;N7</title>
<path fill="none" stroke="black" d="M619.026,-388.7C683.088,-381.049 808.055,-361.778 906,-320 930.379,-309.601 955.105,-294.248 975.931,-279.63"/>
<polygon fill="black" stroke="black" points="978.205,-282.307 984.306,-273.645 974.135,-276.612 978.205,-282.307"/>
<text text-anchor="middle" x="863.5" y="-343.4" font-family="Times Roman,serif" font-size="14.00">97</text>
</g>
<!-- N2 -->
<g id="node3" class="node"><title>N2</title>
<polygon fill="none" stroke="black" points="624,-654 530,-654 530,-616 624,-616 624,-654"/>
<text text-anchor="middle" x="577" y="-642.8" font-family="Times Roman,serif" font-size="8.00">runtime.gosched0</text>
<text text-anchor="end" x="616" y="-632.8" font-family="Times Roman,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="616" y="-622.8" font-family="Times Roman,serif" font-size="8.00">of 2491 (99.6%)</text>
</g>
<!-- N3 -->
<g id="node4" class="node"><title>N3</title>
<polygon fill="none" stroke="black" points="619,-504 535,-504 535,-466 619,-466 619,-504"/>
<text text-anchor="middle" x="577" y="-492.8" font-family="Times Roman,serif" font-size="8.00">runtime.main</text>
<text text-anchor="end" x="611" y="-482.8" font-family="Times Roman,serif" font-size="8.00">0 (0.0%)</text>
<text text-anchor="end" x="611" y="-472.8" font-family="Times Roman,serif" font-size="8.00">of 2491 (99.6%)</text>
</g>
<!-- N2&#45;&gt;N3 -->
<g id="edge12" class="edge"><title>N2&#45;&gt;N3</title>
<path fill="none" stroke="black" stroke-width="2" d="M577,-615.697C577,-590.045 577,-544.48 577,-514.502"/>
<polygon fill="black" stroke="black" points="580.5,-514.229 577,-504.229 573.5,-514.229 580.5,-514.229"/>
<text text-anchor="middle" x="595.5" y="-527.4" font-family="Times Roman,serif" font-size="14.00">2491</text>
</g>
<!-- N3&#45;&gt;N1 -->
<g id="edge2" class="edge"><title>N3&#45;&gt;N1</title>
<path fill="none" stroke="black" stroke-width="2" d="M577,-465.938C577,-453.355 577,-436.621 577,-422.356"/>
<polygon fill="black" stroke="black" points="580.5,-422.038 577,-412.038 573.5,-422.038 580.5,-422.038"/>
<text text-anchor="middle" x="595.5" y="-435.4" font-family="Times Roman,serif" font-size="14.00">2491</text>
</g>
<!-- N5 -->
<g id="node6" class="node"><title>N5</title>
<polygon fill="none" stroke="black" points="924,-102 230,-102 230,-4.9738e-14 924,-2.13163e-14 924,-102"/>
<text text-anchor="middle" x="577" y="-62.72" font-family="Times Roman,serif" font-size="39.20">main.(*Cluster).ComputeDistances</text>
<text text-anchor="end" x="916.5" y="-15.72" font-family="Times Roman,serif" font-size="39.20">975 (39.0%)</text>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge6" class="edge"><title>N4&#45;&gt;N5</title>
<path fill="none" stroke="black" stroke-width="2" d="M577,-155.979C577,-141.212 577,-126.058 577,-112.019"/>
<polygon fill="black" stroke="black" points="580.5,-112.015 577,-102.015 573.5,-112.015 580.5,-112.015"/>
<text text-anchor="middle" x="591" y="-125.4" font-family="Times Roman,serif" font-size="14.00">973</text>
</g>
<!-- N6 -->
<g id="node7" class="node"><title>N6</title>
<polygon fill="none" stroke="black" points="1068,-80 942,-80 942,-22 1068,-22 1068,-80"/>
<text text-anchor="middle" x="1005" y="-58.36" font-family="Times Roman,serif" font-size="19.60">math.Sqrt</text>
<text text-anchor="end" x="1060" y="-33.36" font-family="Times Roman,serif" font-size="19.60">135 (5.4%)</text>
</g>
<!-- N4&#45;&gt;N6 -->
<g id="edge14" class="edge"><title>N4&#45;&gt;N6</title>
<path fill="none" stroke="black" d="M816.715,-155.948C856.324,-139.704 896.38,-121.561 933,-102 941.816,-97.2907 950.816,-91.6688 959.332,-85.9055"/>
<polygon fill="black" stroke="black" points="961.443,-88.7006 967.663,-80.1236 957.452,-82.9499 961.443,-88.7006"/>
<text text-anchor="middle" x="910" y="-125.4" font-family="Times Roman,serif" font-size="14.00">118</text>
</g>
<!-- N7&#45;&gt;N6 -->
<g id="edge4" class="edge"><title>N7&#45;&gt;N6</title>
<path fill="none" stroke="black" d="M1024.43,-202.387C1020.32,-170.354 1014.29,-123.376 1010.04,-90.2661"/>
<polygon fill="black" stroke="black" points="1013.47,-89.5131 1008.73,-80.04 1006.53,-90.4042 1013.47,-89.5131"/>
<text text-anchor="middle" x="1024.5" y="-125.4" font-family="Times Roman,serif" font-size="14.00">17</text>
</g>
</g>
</g></svg>
